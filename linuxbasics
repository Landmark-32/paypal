# Ngoh Tezoh

DevOps:
=======
Is this a Master Degree Course/Program?? NO  
Do i need a Bachelor's Degree to enrol?  NO

This course is for every student to become a master and to
master the subject matter in DevOps end-to-end deployment.  

Students background:
  1. Bachelor's degree in IT and non-IT 
  2. Master Degree in IT and non-IT   
  3. Ph.D in IT and non-IT 
  4. High school graduate
  5. No former education 

92% OF Students are from non-IT background  
5% OF Students are from IT background without any IT job  
3% OF Students are from IT background with IT job 
===================================================== 
IQ: Explain your experience in DevOps?
 BSc/MSc Graduate IT    vs           :
    DevOps can be use to automate IT tasks and processes
 Landmark DevOps MasterClass Graduate:
    I have over 7 years experience implementing DevOps processes 
    and automating tasks for multiple clients  

    I have experience implementing DevOps processes 
    and automating tasks for multiple clients  

DevOps modules:
1)  DevOps Introduction/Foundation 
      SDLC - Software Development lifecycle 
    Waterfall Methodology ---- 4-6 MONTHS
       Agile Methodology   --- 10WD  
          DevOps automation --  
IQ: What is DevOps to you?? 
    Base on my experience DevOps is all about continous automation
    and improvement on how IT tasks and processes are implemented 
 Why DevOps? 
    1. Automation  ---    
    2. Transformation 
    3. Disruption 
    4. Innovation 
Mode of transport -- 
   walk of foot
   horseback  
   motto vehicule 
   train 
   plane 

 DevOps Importance? 
   The Present and the Future 
   of IT innovation 

SME = Subject Matter Expert 
  1. Technical skills  
  2. Managerial skills
       - Project Managers  
       - Scrum Masters   
  3. Leadership skills  

As a DevOps Engineer I Work with my team to: 
    develop applications , 
    test applications, 
    build applications, 
    review + qualify applications, 
    secure applications, 
    deploy applications,
    Access applications,  
    maintain applications, 
    manage and monitor applications
    using 
    computerised automated Technologies 
    Technology stack 

Bank of America customer account :
  web applications  
What is your Technology stack ??

2. Linux and Linux Commands 27hrs:
   computer operating systems 
     Windows system 
       venors: HP/DELL/ASUS/LENOVO/toshiba/samsung/acer =   
     macOs system 
       venors: Apple  
     Linux system:
        vendors: Redhat/Ubuntu   

3. Shell Scripting  - 15 hours  
   Welcome to BOA/TD/UBA/BB

4. Git - Versioning 12 hours
   GitHub - SCM -   

5. Maven – 6 hours 
   UnitTesting + Build 
   code+build = packages 
               war/ear/jar  

6. Tomcat / JBoss/  - 4 hours  

7. Apache HTTP Server - 3 HOURS
   nginx webServer 

8. SonarQube  = 5hours  
     Code quality Analysis  
     Review + Qualify the code  

9. Nexus/JFrog:  5hours
    UploadArtifacts 
    backup + security 

10. CI/CD Automation - Jenkins = :
    18 hours 
    Money bag / 
    140k/yr 
    Build and Release Engineer 
    Jenkins Engineers  

12: Application performance monitoring
    NewRelic = APM  = 2 HOURS  

13. AWS: Amazon Web services = 
    AWS Certified Solutions Architect = 13
    CLASS = 21hrs
    27 hours on-demand video

       Cloud Engineer 
       Sr. Cloud Engineer 
Please buy this course from Udemy, study it and add to your library
https://www.udemy.com/course/aws-certified-solutions-architect-associate-saa-c02/?src=sac

Note: It is sometimes sold at a discounted price []

14. Terraform -IaC  -- 24 hours :
     Sr. Infrastructure Engineer  

15. Docker and Docker swarm: 24 hours  

16. Kubernetes/Helm:  - 36 hours  - CKA

17. Prometheus and Grafana  = apm  

18. EFK/ELK = log mgt and data Analytics   

19. Ansible = 15 hour  
======================================
20. Python  = 21 hours  

21. AZURE AND GCP
===================================
1. Modules  = 4.5 MONTHS/19weeks:
              August 29, 2023 
   Discounted Fee = 3,600 USD 
                     20,000 USD  
  The complete Discounted fee is due by the end of week1 (April 23, 2023). 

2. Bootcamp = Interview Q/A reviews: 
             Sep 1, 2023 to Oct 15, 2023
              7 weeks 
   Thursday = 7pm - 11pm EST               
   50% hired

3. Morning devotion -- FREE  - : 
    Mondays to Fridays -  6am-8:am EST 
    Interview simulations  
    Interview review 
    Hot seat  
    60-90 DAYS  

4. One on one with Bootcamp Engineers:
   30-60min session and UP TO 3 SESSIONS
   Review Resume and Linkedin profile 
Graduation date: Oct 14, 2023  :  
================================
2022 OVER 400 HIRED  
2023 OVER 3,000 Engineers to be hired 

1. 100% job guarantee. 
2. 100% jobs guarantee. 
   with 5/8 job offers on Graduation day   

Important groups and class channels:
1. Class32 Whatsapp group [READ AND WRITE]  = 

2. Class32 devops group     = telegram [READ] :
    ZOOM links, Class videos, running notes and PDF notes 
    This is the most Important group for the class  

3. class32  solution group  = telegram
   Troubleshooting and problem solving 

4.Landmark Help desk = telegram  group
  General Troubleshooting and problem solving 

5. Teams = 14 team members  = May 6, 2023 

6. Bootcamp32 Channel 

7. Sr. Engineers = 

Landmark Technologies,:
Tel/Whatsapp and Telegram contacts
+1 437 215 2483 -- Prof Legah  [Whatsapp message or telegram message]  
+1 437 221 3099 -- Ann -Admin1 [call or Whatsapp message ]
+1 647 267 6399 -- Admin2-Abim [call or Whatsapp message ]
+1 571 453 6677 -- Finance Admin [call or Whatsapp message ]
+1 206 210 4445 -- Ayafor - Class Manager [Whatsapp/telegram message ]
+1 470 483 2473 -- Marie - Admin  [call or Whatsapp message ]

https://github.com/LandmakTechnology/questions-answers
https://github.com/LandmakTechnology/questions-answers/tree/master/contacts

Registration form:
  mylandmarktech.com/join  
website:
  mylandmarktech.com
==========================================================
scammer / hacker  - forgiven 
Blessings 
curses

default setting is Blessings
opposite  


cancer / tumor /  
a millionaires in dollars 
poverty will call you poor 
==================================
 deploy --- 
=======================================
Softwares to downloads:
1. sublime Text  -- use to open the running notes
    Notepad++
    bracket 
What is a Computers ??
  It is a device with both hardware and Software components. 
 HARDWARE components are: 
   motherboards, CPU, Screen/monitor, keyboard, mouse, harddrive, RAM, Cards 
software components:
  1. OS = Operating system and 
  2. others softwares - microsoft office, adobe reader, antivirus, sublime Text

Vendors: 
  Lenovo / dell / hp / apple / Acer / asus / 
  toshiba / yoga / samsung / sony / LG /Mac-Apple

Class of Computers:  
  Personal Computers:
    Desktop, Laptop, IPADs, Tablets, Phones, notebook, watches, etc. 
  Enterprise Computers : Workstations, 
                         Servers (super computers) 

The OS is the heart of a computer -- 
Operating system:
The Operating system running in a computer defines the computer type:
Operating system = OS  
  Windows OS
  Linux OS 
  Solaris OS    
  Mac OS 
  IOS -- smart phones[iphones/ipads]   
  Android  -- smart phones[samsung,motorola]

Lenovo 

If a Lenovo Laptop is running with a Linux OS? = Linux system
HP Laptop is running with a Solaris OS?   = Solaris system
dell Laptop is running with a Windows OS? = Windows system
 - 
Can I change my OS from Linux to Windows or vise versa ? YES

Can a computer have more than ONE OS at once?? 99% 
  Windows - WSL 
  Hypervisor -  Virtual manchines  

What determines the choice of an OS:
1. Security 
    85% of our servers are Linux based
    Linux systems are not vulnerable to virus attack  
    Windows systems are vulnerable to virus attack      

    1. YOU ARE EXEMPTED/FREE FROM SICKNESS 
    2. BE SICK AND GET TREATED 

2. cost
   Linux is a free and Open source OS  
   Windows is a licenced/PAID OS    

3. support 
    Linux has a very large, effective and free community support[2b]
    Windows support is available Only from Microsoft[.1b] but paid for.   

   1M possible helpers to resolve my issue for free   
   1k possible helpers to resolve my issue at a cost 

 32 -- 4,000 Engineers  
         500 Engineers 
         25 possible helpers to resolve my issue at a cost 

  solutionGrp---HelpDesk---Team--ClassAdmin --- ClassManager---Professors 

4. usage : vendor1 [50]  vendor1[3] 
   Linux OS is mostly utilised for Enterprise tasks
   Windows is utilised as Workstations
5. performance 
6. Reviews 
7. speed 
8. scability and elasticity 
==========================================
How are tasks runned/executed on a computer?
what kind of workloads can be executed on a computer systems?
  1. Create files and add content
  2. Modify files  
  3. Create folders / directories 
  4. create sub-folders   
  5. send emails    
  6. downloads files  
  7. watch movies  
  8. create users  
  9. backup 
  10. website 
  11. make-money [ 25,000+USD /  ]
  12. gaming
  13. trading 

How are tasks performed on computer systems?
  1. GUI = Graphical user interface  
           Graphical user   = 2 hours  
           25,000usd - 65,000usd per year  
           Administrative Assistant/ Customer Service / 

  2. CLI = Command Line interface  
           command user = 5min 
           120k - 400k  
           powerShell/
           gitbash 
           terminal 

  touch test1 test2 test3 
  mkdir 
  cd
  ls 

Linux OS and Linux Commands:
============================ 
Linux is an Open Source Operating System
Linux started around 1991 by Linus Torlvads

Linus was using a Solaris system for his project.
  --Encounter a problem running his project  

Linus  :
Working on his Project using a Solaris system: 
Linus created the Linux OS from the Solaris kernel/OS []:

Linux is an open source OS with multiple destributions and/or versions.
    Windows, Solaris, MacOS, etc are licenced OS.

Softwares can be provided as:
  1. open source: [Free with The source code]  
     open source softwares has more community support

  2. Free:     [free but without the source code(recipe)] 

  3. Licenced: [paid for, Windows OS, Office365]  


IQ: Explain your experience in Open SOURCE TECHNOLOGY?? Linux, 
     With Open source Technologies the software is free including 
     the source code[recipe/secrets of the business]
    TayoFR: Dinner = Fried Rice             = Free
        Paul

    MaryFR: Dinner = Fried Rice + recipe    = Open source 
        Jane  -- Mary-JaneFR    - Distributions 
        Silas -- Mary-SilasFR   - Distributions
        kate  -- Mary-KateFR    - Distributions

Tikcet0014---:
  Create and connect to a Redhat Linux server/system   :
1. Buy a Linux server from the market 
   Configure the server  = COST = 50,000USD / time = 100x x=500min    

2. Use a hypervisor to create a Linux Virtual machine on your system
   virtualBox, hyper-V, VMware, xen, 

3. Use a managed cloud computing providers [aws, azure, GCP, etc.]
   super fast, easiest option,  

Ticket0015---:
 Create a free account in AWS Cloud or any CLOUD Provider of your choice:
    website: aws.amazon.com
    Root user email address: Desykelvin@gmail.com
    tel no: +1 *** *** ****  
    credit card: 
    password: Licom2045@    

Ticket0016---:
  Launch an amazon linux server in AWS:
    - Login into an AWS account  
            Root user sign in 
          Email: info@landmarkmetropolitanuniversity.com
          password: Licom2045
    - Search for the EC2 console 
    - Launch your server [ec2-instance]
    - connect to the Linux ec2-instance using:



  with a new aws account we can use aws free-tier eligible services for 12 months 

Ticket0017:
  connect to your Redhat Linux server[databaseServer]    
databaseServer - :
  publicIP   44.201.180.221
  SSH-KEY    class32.pem 
  user       ec2-user  
  password     na 
ssh -i "class32.pem" ec2-user@ec2-44-201-180-221.compute-1.amazonaws.com
ssh -i "class32.pem" ec2-user@44.201.180.221
=============================================    

connecting to a Linux server in aws:
====================================
SSH  = Secure shell is the protocol use to connect to Linux systems
Connect to your Linux server in AWS using an ssh-client -   :
  1. ssh-client software [provide a passage]
         mobaXterm, puTTY, gitBash
         Download an install mobaXterm ssh-client software

https://download.mobatek.net/2312023031823706/MobaXterm_Installer_v23.1.zip
         
  2. identification = publicIP address and the default userName  
        remoteHost address - publicIP = 35.171.7.253
        userName = ec2-user   
  3. authentication = password or an 
                      private-SSH_KEY  = class32.pem   

   ssh ec2-user@35.171.7.253  
   ssh -i class32.pem  ec2-user@35.171.7.253 

  4. AUTHORISATION = what you do in the server  
       Tasks that a user is AUTHORISE to execute 

Instance ID : i-0937bce778b92617f (demon32)
Open an SSH client.
Locate your private key file. The key used to launch this instance is demo32.pem
Run this command, if necessary, to ensure your key is not publicly viewable.
  chmod 400 demo32.pem
Connect to your instance using its Public DND/IP:
 ec2-35-171-7-253.compute-1.amazonaws.com
 35.171.7.253  

Example:
 ssh -i class32.pem  ec2-user@35.171.7.253
 ssh -i Desktop/demo32.pem ec2-user@35.171.7.253
 ssh -i Download/demo32.pem ec2-user@35.171.7.253
 ssh -i "demo32.pem" ec2-user@ec2-35-171-7-253.compute-1.amazonaws.com

Download:
   sublime Text/bracket/Notepad++  -- text editor
   mobaXterm/puTTY/gitbash -- ssh-client 
   Telegram Desktop -- To access the class video from your computer  
   whatsapp Desktop -- To access the class video from your computer  

3. Connect to the server and run tasks[create a file] 
   - You need a computer, e.g windows system 
   - SSH (secure shell) protocol is required  
   - we need an ssh-client software e.g mobaXterm     
   - We need the server's details:
        public ip-address: 35.171.7.253
        userName: ec2-user   
        password:   
        ssh-private-Key:  demo31.pem   
         macOS terminal = ssh -i  demo32.pem ec2-user@35.171.7.253

 4. Open ssh-port=22 on the server firewall / security Group 

 Linux File Structure   
 =====================
                 Windows        Linux/mac:
 -               Files          Files
                 Folder         Directory
                 Folders        Directories      
                 sub-folders    Sub-directories


root Directory   C:\               /   

The root Directory [/]  is the main/principal Directory where other 
directories and Sub-directories are created from  
  Commands:
        ls  = List the content of a Directory
        pwd = present Working Directory 
        hostname = serverName  
        cd = change Directory
        sudo hostnamectl set-hostname demo  
        sudo su - ec2-user      

  [ec2-user@ip-172-31-81-224 ~]$ hostname
  ip-172-31-81-224.ec2.internal
  [ec2-user@ip-172-31-81-224 ~]$ sudo hostnamectl set-hostname demo
  [ec2-user@ip-172-31-81-224 ~]$ sudo su - ec2-user
  [ec2-user@demo ~]$ hostname
  demo

      ls  = List the content of your pwd [present Working Directory]
      ls / = List the content of root Directory 
      ls /home = List the content of home Directory 

 Linux File Structure   
 =====================
 [ec2-user@demo ~]$ ls /
bin   dev  home  lib64  media  opt   root  sbin  sys  usr
boot  etc  lib   local  mnt    proc  run   srv   tmp  var  

home: contains users' home Directory details 
=====
  ec2-user  [default user created by the system]
  landmark [sudo adduser landmark]
  obi [sudo adduser obi]

bin:  contains binary Files (commands) 
====
  ls 
  pwd  
  clear
  cd 
  touch  

sbin: contains system binary Files/commands  
====  Can Only be executed by the admin-user / root user    
  adduser
  passwd 
  chage 
  chown   
IQ: What is the difference between bin and sbin directories in Linux?
    sbin: are binary flies only executable by users with administrative
    or elevated priviledges or admin/root user.  
    bin: files are executable by any user [normal users and admin-users] 
         ls  

etc: contains configuration files   
----
  /etc/shadow           = detail information about users password  
  /etc/passwd           = detail information about users  
  /etc/ssh/sshd_config  = ssh configuration details 
      ssh  = secure shell 
      sshd = ssh service/daemon =  
        userName/password  
        userName/ssh-private-Key  

tmp: Temporal files 
---   

opt: Where softwares and packages should be installed      

var: dynamic files   
  /var/logs/messages  

proc: 
=======
-  meminfo 
-  cpuinfo 
  cat /proc/meminfo    
  cat /proc/cpuinfo

cat = read the content of a file 

Linux basic commands  
====================
performing tasks in Linux systems usinf the CLI      
   - Commands - CLI 

A Directory is a container of files and Sub-directories 
A Folder is a container of files and sub-folders
We have a new client  - Tesla 
==============================
Directory management Commands: 
  mkdir  = Create a Directory  
  rmdir  = delete an empty Directory 
  rm -rf = delete any Directory 
  cd     = Directory navigation  
  pwd    = present Working Directory 
  ls     = list the Directory's content 

Ticket0001:
 Create work directories for tesla CLIENT?? 
   MKDIR tesla [ an error will occur because Linux is case sensitive ]
   mkdir tesla   

Ticket0002:
  Create project01 directories in the format below  
     dev/git/maven/aws/nexus/java  
  mkdir -pv dev/git/maven/aws/nexus/java  
  mkdir -p /test/test1  
    -p = create including the parent directory    
    -v = create in verbose mode   

[ec2-user@demo ~]$ mkdir -pv dev/git/maven/aws/nexus/java
mkdir: created directory 'dev'
mkdir: created directory 'dev/git'
mkdir: created directory 'dev/git/maven'
mkdir: created directory 'dev/git/maven/aws'
mkdir: created directory 'dev/git/maven/aws/nexus'
mkdir: created directory 'dev/git/maven/aws/nexus/java'

The tree command displays the content of directories in a tree structure.
[ec2-user@demo ~]$ tree 
-bash: tree: command not found
[ec2-user@demo ~]$ sudo yum install tree 

[ec2-user@demo ~]$ tree
.
├── dev
│   └── git
│       └── maven
│           └── aws
│               └── nexus
│                   └── java
├── tesla
├── tesla-dev
├── tesla-prod
├── tesla-test
└── test
    └── test1

Class administrators  :
======================
Hands-on training  === 
While studying you will encounter issues 
How can you resolve issues encountered??
 1. Try to fixed/resolve the situation yourself     80/100  
 2. Post the problem with a screen-shot in class32 telegram solution Group  
    wait for 1-5min or 5-10mins for help from Fellow Class mate  
     snipping tool for screen-shots:
 3. Post the problem in the 24/7 Landmark helpdesk in telegram and
    wait for 5-10 mins for help. Landmark community 


      Ensure that tree is install and use write the command correctly  
      please see below:
         sudo yum install tree -y  
         tree   


Listen to the lectures;
Don't try to practice along side the prof. 



Running notes for April 29, 2023  starts
-------------------------------------
==================================================
================================
As a DevOps Engineer I Work with my team to: 
    develop: applications , 
    test: applications, 
    build: applications, 
    review + qualify: applications, 
    secure: applications, 
    deploy: applications,
    Access: applications,  
    maintain: applications, 
    manage and monitor: applications
  
using computerised automated Technologies. 
    Technology stack 

https://www.bankofamerica.com/
          - login = userName/cardNumber  

computerisation = Computers :
  -  personal user = memory= 4g/8g/16g/32/64GB  = 400 - 2000USD
       - Laptops / phones / Tablets / watches 

  -  Professional  = memory= 8g---256gb  = 700usd - 20,000USD
       - Workstations / Laptops / desktop  

  -  Enterprise    = memory= 128g---4000gb  = 2,000 - 200K
       - Servers  

CSP = Cloud/Computer Service Providers: 
2023 Convention in Toronto :
   MD   ---> Drive   = 8 hours 
Car Service Provider = uber/lyft ---> 5min 
FSP: Food Service Provider = postmates/UberEATS/instantcart
CSP: aws.amazon.com 
     AWS, AZURE, GOOGLE, ALI BABA
BSF  - FinTech: Banking Service Providers
  Simon: Create account / Transfer / exchange / withdrawal
         e-signing 
         cash deposit / cheque deposit / loan / overdraft 

zelle = 7 Indians  = 5,000 USD/200B

Insurance:
10 millions   = 900,000 employers  / 
                800,000 100K      = 80B

                100,000 BANKINGS  = 10B
                50, 000 Engineers = 15B 
                                    25B

COMMERCIAL PROPERTIES:  

40 Countries :

 The Entire Agile family [2,000 employers] - 
    Scrum Master/
   develop / test / build / qualify / deploy / 
   manage and monitore applications
Labour:
  Direct Labour   ---  
  Indirect Labour --- :

Houston --- 
aa.com    --- tesla   
   2,000USD for a company to create EC2-INSTANCE 

CSP: aws.amazon.com 

Server:
  Name = dbserver 
  ip-address = 34.201.34.133  
  userName = ec2-user 
  password =   
  ssh-private-Key = demo31.pem  
Using password/passwordless access:
  ssh ec2-user@34.201.34.133 

ssh-private-Key access :
  ssh -i demo31.pem ec2-user@34.201.34.133 

 2 mins
5 mins  = 2,000US 


File and directory management Commands:  
======================================
mkdir    dirName   = 
rmdir    dirName   = 
rm -rf   dirName
ls dirName  = List the content of the dir
ls  = List the content of the pwd
pwd 
cd dirName 
====================
touch fileName = create an empty file
Create the following files:
  list.txt 
  hello.py 
  greet.sh 
  app.java  
  monitor.sh   
  deploy.sh 
option1:
touch list.txt 
touch hello.py  
touch greet.sh 

option2:
touch list.txt hello.py greet.sh  

Chidi  = 
Graphical User interface - GUI :

Create a file [list.txt] and add content??    
=========================================
1. Simon 
2. Legah 
3. Landmark 
4. Dominion 
We shall use the vi command:
  vi list.txt 
vi has 'insert' mode and 'command' mode:

1. You start accessing the file in command mode 
   In command mode we can't modify content
     press the 'i' key to enter "insert" mode 
     press "esc key" to enter command mode 

2. Save and Quit: 
    1. press "esc key" to enter command mode 
    2. type ':wq' or ':wq!' and press enter-key 
       to save and quit

3.  Quit without saving:  
     press "esc key" to enter command mode          
     type ':q!' and press enter key to quit 
     without saving

 short-cut -- Save and Quit: 
    press "esc key" to enter command mode
    do a quick double press on the shift+z key  
    to save and quit = press+hold '

Modifying the content of a file:
  Text editors:
 Windows:
    sublime text
    bracket
    notepad++
    vs code 
    atom 
    eclipse 

save time:
  300,000USD/year  
 short-cut is the longest route to success 

Class29: 
   9 months 
   July 8, 2022 --> Jan 7, 2023 
   2/3/4/5/6th month 

4.5 months = modules     :
1.5 months = Bootcamp    :
==============================
DevOps Engineers  = hired/ 
Detailed deployment =- 

vi list.txt   
list :
 simon 
 Legah 
 Paul 
 John 
 Peter 
 James 
 Tita 
 Pefok 
 Linux 
 Windows 
 Git 
 Maven 
 aws 
 gcp 
 mgc 
 toyota 

Reading/displaying the content of a file:
cat fileName
cat -n fileName  
[ec2-user@demo maven]$ cat list.txt
[ec2-user@demo maven]$ cat -n list.txt
     1  list :
     2   simon
     3   Legah
     4   Paul
     5   John
     6   Peter
     7   James

head fileName = display the 1st 10 lines 
head -5 fileName = display the 1st 5 lines 
head -2 fileName = display the 1st 5 lines                

tail fileName = display the last 10 lines
tail -2 fileName = display the last 2 lines
tail -1 fileName = display the last lines

less fileName
   press 'q' to exit
more fileName 

Backup files:
============
cp = creates another copy of your file  
cp fileName newFileName

mv = rename and/or relocate
mv hello.py helloworld.py 
mv aws /tmp/gcp

rm fileName = delete the file   
wc fileName = 
wc -l list.txt = display number of lines 

ln = Create links of files:
Hard Link = copy:
  ln fileName linkName  
  ln list.txt mylist 

soft links:
  ln -s fileName linkName
  ln -s new.txt mybest

[ec2-user@demo maven]$ ll
total 16
drwxr-xr-x. 2 ec2-user ec2-user    6 Jan 21 19:40 class31
-rw-r--r--. 2 ec2-user ec2-user  379 Jan 21 19:22 list.txt
lrwxrwxrwx. 1 ec2-user ec2-user    7 Jan 21 19:40 mybest -> new.txt
-rw-r--r--. 2 ec2-user ec2-user  379 Jan 21 19:22 mylist
-rw-r--r--. 1 ec2-user ec2-user  379 Jan 21 19:25 new.txt
-rw-r--r--. 1 ec2-user ec2-user 4028 Jan 21 18:39 notes.txt

FileType:
 d    = Directory   
 -    = regular file     
 l    = link   

Linux 3, Jan 21, 2023:
touch  - 
vi/vim - text editors 
cat/less/more/tail/head/ 
cp/ ln / ln -s / 
find   

Connect to the demo32 server hosted in aws 
cloud and run/execute workloads/tasks:
========================
public ipaddress = 35.171.7.253
userName  = ec2-user
password  = ?
ssh-private-Key = demo32.pem   
ssh-client software = mobaXterm 
  mobaXterm for windows system users  
  terminal for macOS system users

ssh -i "demo32.pem" ec2-user@ec2-35-171-7-253.compute-1.amazonaws.com
ssh -i "demo32.pem" ec2-user@35.171.7.253
---
1     2      3    4        5      0       7          8:
- rw-r--r--. 1 ec2-user ec2-user  0 Apr 30 19:57 class.txt
d rwxr-xr-x. 3 ec2-user ec2-user 17 Apr 28 01:34 dev
d rwxr-xr-x. 3 ec2-user ec2-user 19 Apr 28 01:33 test
l rwxrwxrwx. 1 ec2-user ec2-user  9 May  4 23:27 me.txt -> class.txt

Fields for files:
  1)  File type    [-file, d=dir, l=soft link]   

  2)  Permissions [ owner=rwx  group=r-x  others=r-x ]   2023 G Wagon  = Ifoema 
           
  3)  Number of links
  4)  Owner [ ec2-user ]
  5)  Group Owner [ Engineer ]
  6)  Size of the File in Bytes
  7)  Date and Time of creation
  8)  File name/Dir Name

File security / Permissions:
============================
Who can access a file?
  owner   
  groupOwners   
  others
Access levels:        
  read    = r = 4   
  write   = w = 2
  execute = x = 1 

  owner group  others
- rw-   r--    r--.    1 ec2-user ec2-user  class.txt
d rwx   r-x    r-x.    3 ec2-user ec2-user  dev

           owner  group  others   default Permissions
class.txt  rw-=6  r--=4  r--=4      0644    
dev        rwx=7  r-x=5  r-x=5      0755

The default Permissions assign to files depends on;
The class of the user[normal user or rootUser]
                      normal user    rootUser:
                      file   dir     file   dir
Full Permissions      0666   0777    0666   0777
default Permissions   0644   0755    0644   0755
                      ----   ----    ----   ----
 umask                0022   0022    0022   0022    :
                      ----   ----    ----   ----
IQ: What is the umask value for a normal user and the rootUser?
IQ: What is the umask value?
    It is use to define file/dir Permissions at creation.  

            normal user        rootUser
            file     dir       file     dir  
 owner   = rw-=6    rwx=7      rw-=6    rwx=7   
 group   = rw-=6    rwx=7      r--=4    r-x=5
 others  = rw-=6    rwx=7      r--=4    r-x=5  

switch to the rootUser:
  sudo su - or 
  sudo -i  

d rwx r-x r-x. 2 root root 6 May  4 23:45 billionaire
- rw- r-- r--. 1 root root 0 May  4 23:45 rich.me

IQ:Create a umask value that will assign full Permissions 
   to files CREATED by the ec2-user 

                      normal user    rootUser:
                      file   dir     file   dir
Full Permissions      0666   0777    0666   0777
default Permissions   0666   0777    0644   0755
                      ----   ----    ----   ----
 umask                0000   0000    0022   0022    :
                      ----   ----    ----   ----

IQ:Create a umask value that will assign 0600 Permissions 
   to files CREATED by the ec2-user 

Full Permissions      0666   0777
default Permissions   0600   0711
                      ----   ----
 umask                0066   0066
                      ----   ----  

0 6 0 0 = rw-- --- --- 

what is umask value?? umask is use to determine/set
the Permissions that files and directories will inherit at creation. 
It is Good for file security. 
umask value set the Default files permissions for users.

9/10  = chmod 
1/10  = umask  

chmod  = change the permissions for individual files and directories  
chmod 600 fileName    
chown   = use change file ownership  
chgroup = use change file group ownership   
=======
                 owner   group
d rwx--x--x. 2 ec2-user ec2-user    billions

- rw-------. 1 ec2-user ec2-user    blessed.me

                  billions    blessed.me
owner   ec2-user   7            6
group   ec2-user   1            0
others  anyone     1            0

Assign permission for dominion user to read the blessed.me file  
chmod +r fileName 
chmod 604 fileName   

Assign permission for the ec2-user group to modify the blessed.me file  
chmod +r fileName 
chmod 664 fileName  


read=4 
write=2
execute=1   

ec2-user  landmark  obi 

[ec2-user@demo ~]$ ll blessed.me
-rw-rw-r--. 1 ec2-user ec2-user 0 May  5 00:02 blessed.me

obi will be working on the blessed.me for this sprint, 
please grant ownership of the file to obi  
This practice is good for automation and easy deployment
of tasks/workloads. 

chown newOwner fileName   
chown obi blessed.me    
[ec2-user@demo ~]$ chown obi blessed.me
chown: changing ownership of 'blessed.me': 
  Operation not permitted
[ec2-user@demo ~]$

chown and chgroup commands can ONLY be run by the rootUser
sudo is a command used to run commands as another user  
sudo -u root chown obi blessed.me 
    sudo chown obi blessed.me  
sudo -u obi  chown obi blessed.me      

sudo -u obi  chgroup obi blessed.me  
[ec2-user@demo ~]$ sudo -u obi  chgrp obi blessed.me
chgrp: cannot access 'blessed.me': Permission denied

sudo chgrp obi blessed.me

obi will be working on the billions directory for this sprint, 
please grant ownership and group ownership of the dir to obi  

sudo chown obi billions  
sudo chgrp obi billions  

sudo chown obi:obi billions 

[ec2-user@demo ~]$ history
    1  clear
    2  hostname
    3  ls
    4  clear
    5  ls
    6  pwd
    7  ls /
    8  ls /home
    9  sudo adduser obi
   10  sudo adduser landmark
   11  ls /home
   12  hotsname
   13  hostname
   14  sudo hostnamectl set-hostname demo
   15  sudo su - ec2-user
   16  ls
   17  clear
   18  whoami
   19  ls
   20  hostname
   21  ls /var
   22  ls /var/log
   23  clear
   24  cat /proc/meminfo
   25  cat /proc/cpuinfo
   26  clear
   27  ls
   28  MKDIR tesla
   29  Mkdir tesla
   30  mkdir tesla
   31  ls
   32  mkdir tesla-dev tesla-test tesla-prod
   33  ls
   34  mkdir -p /test/test1
   35  mkdir -p test/test1
   36  ls
   37  clear
   38  ls
   39  ls test
   40  mkdir -pv dev/git/maven/aws/nexus/java
   41  tree
   42  sudo yum install tree
   43  clear
   44  tree
   45  Tree
   46  clear
   47  ls
   48  tree
   49  mkdir -p dirName1/dirName2/dirName3
   50  ls
   51  clear
   52  ls
   53  tree
   54  clear
   55  ls
   56  rmdir tesla
   57  ls
   58  rmdir dirName1
   59  rmdir -rf dirName1
   60  rm -rf dirName1
   61  ls
   62  clear
   63  tree
   64  clear
   65  ls
   66  rm -rf tesla*
   67  ls
   68  tree
   69  pwd
   70  clear
   71  tree
   72  pwd
   73  cd dev/
   74  pwd
   75  cd git/
   76  pwd
   77  clear
   78  tree
   79  cd maven/aws/nexus/java/
   80  pwd
   81  cd ..
   82  pwd
   83  cd ../ ../
   84  cd ../ ..
   85  cd .. /..
   86  clear
   87  pwd
   88  cd ..
   89  cd -
   90  cd ..
   91  cd -
   92  cd
   93  pwd
   94  clear
   95  ls
   96  ls -l
   97  ll
   98  pwd
   99  clear
  100  mkdir -p .git
  101  ls
  102  ls -a
  103  touch class.txt
  104  ls
  105  clear
  106  ls
  107  ll
  108  ls -l
  109  echo DevOps is good
  110  echo DevOps is good > class.txt
  111  cat class.txt
  112  clear
  113  ls
  114  ln -s me.txt class.txt
  115  ln -s class.txt me.txt
  116  ll
  117  clear
  118  whoami
  119  sudo su -
  120  umask
  121  umask 0000
  122  umask
  123  ls
  124  cd dev/
  125  cd
  126  clear
  127  ll
  128  #rw-r--r-- = 644
  129  touch rich.me
  130  ll
  131  umask
  132  umask 0066
  133  umask
  134  touch blessed.me
  135  clear
  136  ll
  137  mkdir billions
  138  ll
  139  clear
  140  umask
  141  umask 0022
  142  ll
  143  chmod 604 blessed.me
  144  ll
  145  clear
  146  ll blessed.me
  147  chmod 664 blessed.me
  148  ll blessed.me
  149  ll billions/
  150  ll
  151  clear
  152  ll
  153  chmod 777 billions
  154  ll
  155  clear
  156  ls /home/
  157  ll blessed.me
  158  ls -l blessed.me
  159  sudo su - obi
  160  sudo su  obi
  161  clear
  162  ll blessed.me
  163  chown obi blessed.me
  164  sudo -u root chown obi blessed.me
  165  ll blessed.me
  166  clear
  167  sudo -u obi  chgroup obi blessed.me
  168  sudo -u obi  chgrp obi blessed.me
  169  sudo chgrp obi blessed.me
  170  ll blessed.me
  171  clear
  172  ll billions/
  173  ll bi*
  174  ll b*
  175  clear
  176  ll
  177  sudo chown obi:obi billions
  178  ll
  179  history

grep command = extract patterns from files  
grep simon list     
grep -i simon list
 where -i =  ignores case sensitivity   

simon 

 [ec2-user@demo ~]$ grep obi  /etc/passwd
obi:x:1001:1001::/home/obi:/bin/bash

pipe command = |  
   Enable the output of a command to be
   the input of another/next command 

cat list | grep -i legah   

IQ: explain the grep and the pipe commands ?

[ec2-user@demo ~]$ cat list | sort | grep a
James
Simon Legah
amaka
datti
paulZZ
samson

cp fileName  --  
mv fileName 

Ticket077: Search for a file called list
find = search for files and directories  
searching a file in the user's home Directory:
   find /home/ec2-user -name fileName or find ~ -name fileName 
   find /home/ec2-user -name list  or find ~ -name list  
searching a file in the present working Directory:
   find /home/ec2-user/dev -name list   or   find . list     

searching a file in the root Directory:
  find / -name list 
  sudo -u root find / -name list    
  sudo find / -name list  
[ec2-user@demo dev]$ sudo -u root find / -name list
/sys/kernel/debug/error_injection/list
/sys/kernel/debug/kprobes/list
/home/ec2-user/dev/list
/home/ec2-user/list

[ec2-user@demo dev]$ cat list
simon
Simon Legah
Simon Peter
James
Obi
datti
samson
amaka
paulZZ
[ec2-user@demo dev]$ cat /home/ec2-user/dev/list
simon
Simon Legah
Simon Peter
James
Obi
datti
samson
amaka
paulZZ

The absolute path to a file starts from the root Directory  
The relative path to a file starts from the pwd  

Ticket078: Search for a binary file called 'pwd' 
   binary files are commands found in the bin/sbin directories

   whereis pwd 
   whereis ls/cat/less/more/tail/head/grep/  

The date command is use to show and to  modify dates/time  

  date  
     [ec2-user@demo dev]$ date
      Sat May  6 13:45:44 UTC 2023

  timedatectl list-timezones
  sudo timedatectl set-timezone "America/New_York" 

[ec2-user@demo dev]$ sudo timedatectl set-timezone "America/New_York"
[ec2-user@demo dev]$
[ec2-user@demo dev]$ date
Sat May  6 09:47:44 EDT 2023

setting the server with the correct time and timezone is important
for task execution and scheduling automation:

Class32 time-table = 
   THU = 7pm EST    
   SAT = 8AM EST  
   Sun = 3pm EST        

  Thu =  7PM PST  


User Mgt:
=======

User/group Management:
=====================
root user = The root user is the administrator or admin user superuser  
            that can run all commands and tasks unrestricted 
            He has unrestricted access into files, etc.    

In Linux the root user is called = root 
root user is created by system when a server is Launch/created. 

Normal Users: Are created by the administrator [root user]    

adduser = will create a user in a linux server   
useradd = will create a user in a linux server

Ticket078:
  Create user accounts for landmark and datti and verify?  :

[ec2-user@demo dev]$ adduser datti
                     adduser: Permission denied.
    1. User account creation require root access 
       sudo -u root adduser datti
       sudo adduser datti
  NB" sudo rights/priviledges are only assigned to designated users 
      By default the ec2-user has sudo priviledges    

  su command is used to switch from one user to another  
switch to a user :
  su - userName  
  su - root    or 
  su - or sudo -i  

[ec2-user@demo dev]$ su datti
Password:
ONLY the root user can switch to another without a password request  

[ec2-user@demo dev]$ sudo su - datti

Ticket079:
  assign a password the user 'datti'
  passwd userName  
  passwd datti  

Ticket080:
  Hello datti please create oke user's account   
  adduser oke -- permission denied    
 [datti@demo ~]$ sudo adduser oke -- permission denied    
  datti is not in the sudoers file.
  ec2-user is not in the sudoers file.

Hello simon, please grant datti sudo access to execute ticket080

When to grant sudo access to a user in Linux

why grant sudo access - 
   sudo access should granted to permit trusted users to perform admin tasks        

How to grant sudo access to a user in Linux  :
1. sudo vi /etc/sudoers   or   
   sudo visudo 
2. sudo echo "userName ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/userName
   sudo echo "oke ALL=(ALL) NOPASSWD:ALL" | sudo tee /etc/sudoers.d/oke

sudo adduser userName  = create a new user
 How to verify if a user account is running/active.
   cat /etc/passwd  
   grep userName /etc/passwd  
   id userName
sudo passwd userName   = assigns password to a new user
 How to verify if a user has an active password.
   sudo cat /etc/shadow  
   sudo grep userName /etc/shadow  
   id userName

[oke@demo ~]$ sudo grep oke /etc/shadow
oke:!!:19483:0:99999:7:::

[oke@demo ~]$ sudo grep datti /etc/shadow
datti:$6$tUY/AKwYnjZr.Mb7$6jTh5mLGIINyQT5bLx50qDY/8KOqgRdeXpCAV..0vRRqVcFQrFLmJgK2.vKP12FGaLi9WTFOhdEW1bEWI7iWW0:19483:0:99999:7:::
[oke@demo ~]$


sudo userdel userName  = delete a user's account   
sudo userdel -r userName  = delete a user's account including the home Directory
sudo usermod  = modifies user accounts 
  sudo usermod -aG managers oke  
sudo groupadd = create a group     
  cat /etc/group   
  sudo groupadd managers 
  sudo groupadd directors  
  sudo groupadd developers  
  sudo groupadd testers   
  sudo groupadd tesla      

grant and remove admin/sudo prilvileges:

  lock user accounts = sudo/root access  is required to lock and unlock accounts:
    passwd -l userName


*List of students that can be trained & added to Landmak Technology Helpdesk*
Criteria: smart, harworking
*Programs*: IT and others  
*LEVELS*: Year 1,2,3,4,5
1. 


5. Contact Class32 Admins via WhatsApp/Telegram 
       Ayafor Emmanuel      +1 (206) 210-4445  []:
       Armstrong Emmanuel   +1 (202) 888-2860
       Darlene              +237 6 80 19 23 92
       Abi                  +1 (647) 267-6399


Ayafor Emmanuel      +1 (206) 210-4445  []:

groups:
  amaka  
  engineers 
  developers 

users:      
  datti  
  landmark  
  dominion    
  amaka
  paul 

users      groups:
           primary  secondary
datti      datti    /managers/engineers
amaka      amaka    /developers

groups:      users:  
engineers    datti/landmark/dominion   
developers   paul/amaka    
amaka        datti/landmark/

sudo groupadd engineers   
sudo groupadd contractors 

delete a group:
sudo groupdel contractors 

addusers to a secondary :
sudo usermod -aG groupName userName  
sudo usermod -aG developers amaka  

create a user account:
sudo adduser userName 
sudo adduser amaka [This will create the user/group ]    

[ec2-user@demo ~]$ sudo usermod -aG developers amaka
[ec2-user@demo ~]$
[ec2-user@demo ~]$ id amaka
uid=1006(amaka) gid=1011(amaka) groups=1011(amaka),1008(developers)
[ec2-user@demo ~]$
[ec2-user@demo ~]$ sudo usermod -aG managers amaka
[ec2-user@demo ~]$
[ec2-user@demo ~]$ sudo usermod -aG tesla amaka
[ec2-user@demo ~]$
[ec2-user@demo ~]$ id amaka
uid=1006(amaka) gid=1011(amaka) groups=1011(amaka),1006(managers),1008(developers),1010(tesla)

Paul is fired from the company.
what will you do as a DevSecOps Engineer:
1. Lock his password = His access will be denied  
      sudo passwd -l username
2. Delete paul's user's account from the servers  
      sudo userdel username 
      sudo userdel -r username []
3. Keep his home Directory  

amaka's tasks will last for 30days.
what will you do as a DevSecOps Engineer:
1. Create a user account for amaka with time limits  
   Changing the aging information for a user 
      sudo chage userName  

[ec2-user@demo ~]$ sudo chage amaka
Changing the aging information for amaka
Enter the new value, or press ENTER for the default

        Minimum Password Age [0]:
        Maximum Password Age [99999]: 30
        Last Password Change (YYYY-MM-DD) [2023-05-11]:
        Password Expiration Warning [7]: 5
        Password Inactive [-1]: 5
        Account Expiration Date (YYYY-MM-DD) [-1]: 2023-06-11

userMgt:
  creating user's account  
  assign passwords to users  
  assign/add users to groups  
  delete users    
  creating groups 
  Elevate user's privilidges 
  modify user account
  lock and unlock user accounts
  Reset user's password 
  set expiry date for user's account/password  
  Assign task to users 
  grant and remove admin/sudo prilvileges

userMgt:
  creating user's account  :
    creating user's account  :
    useradd userName      
    useradd james 
    creating user's account requires sudo access :
       sudo useradd james && 
       sudo useradd paul  
       sudo useradd james && sudo useradd paul && tail -3 /etc/passwd    
  assign passwords to users if you are AUTHORISE  :
       sudo passwd userName  
       sudo passwd james

  creating groups with sudo/root access :
    sudo groupadd groupName
    sudo groupadd managers 
    sudo groupadd developers 
    sudo groupadd engineers 
    sudo groupadd tesla 
    sudo groupadd developers && sudo groupadd engineers ; tail -3 /etc/group  

  assign/add users to groups  = sudo/root access  is required: or 
  modify the account of users = sudo/root access  is required: 
    usermod -G groupName userName  = add user to a secondary group  
    usermod -G engineers paul   

  delete users: = sudo/root access  is required:
    sudo userdel userName     = delete user's account without the UHD 
    sudo userdel -c userName  = delete user's account with the UHD  
       UHD = Hser Home Hirectory
       [ec2-user@demo ~]$ pwd   = /home/ec2-user  

Connect to the demo32 server hosted in aws 
cloud and run/execute workloads/tasks:
========================
public ipaddress = 35.171.7.253
userName  = ec2-user
password  = ?
ssh-private-Key = demo32.pem   
ssh-client software = mobaXterm 
  mobaXterm for windows system users  
  terminal for macOS system users

ssh -i key.pem peter@35.171.7.253

ssh -i key.pem amaka@35.171.7.253

ssh amaka@35.171.7.253

userName=ec2-user /paul/oke/datti


IQ: How can a user access an ec2- Linux instance/server externally using a password?
1. Enable PasswordAuthentication in the server
2. Restart the ssh service

1. method1:
  sudo vi /etc/ssh/sshd_config  
  change: PasswordAuthentication=no to PasswordAuthentication=yes
  sudo service sshd restart

2. method2:  
sudo sed -i "/^[^#]*PasswordAuthentication[[:space:]]no/c\PasswordAuthentication yes" /etc/ssh/sshd_config
sudo service sshd restart

System mgt/Resources Commands:
=============================
date : Print or set the system date and time
df : Report file system disk space usage
du : Estimate file space usage.
hostname : Show or set the system host name.
  hostname  
  sudo hostname newHostname                 -- temporal changes  
  sudo hostnamectl set-hostname newHostname -- permanent hostname change

ifconfig (OR) hostname -i (OR) ip a : To find the private IP address.

Linux server or Linux system

ssh amaka@35.171.7.253 aaa

list the privateIP address:
 [ec2-user@demo22 ~]$ hostname -i 
ipv6= fe80::1066:97ff:fecb:c9f5%enX0 
ipv4= 172.31.81.224

ip a     = list the privateIP address including network interface
ifconfig = list the privateIP address including network interface

curl ifconfig.me  = list the publicIP address

Remote host details:
  publicIP: 35.171.7.253  
  privateIP: 172.31.81.224    
  hostname: demo22 
  dns: domain name service    
  a records = 172.31.81.224 --> mylandmarktech.com  
  a records = 35.171.7.253  --> mylandmarktech.com 

ping demo22  
ping 35.171.7.253   
ping 172.31.81.224 
ping mylandmarktech.com    

Ticket081:
  Install apache http webServer  
  Create an a-records using the aws dns service

sudo yum install httpd -y  
sudo systemctl start httpd  
sudo systemctl enable httpd  
sudo vi /var/www/html/index.html

http:///

 echo Welcome to Landmak Technology

 http://35.171.7.253/

 8am saturday:
   managers 
sudo usermod -G engineers paul  

sudo usermod -aG engineers paul 


Linux7 running notes:
======================
1. Computing Technologies 
   Computer = HARDWARE + Softwares 
   GUI -- Generally run task manually   
   CLI -- Generally automate tasks  

2. Examples of tasks/workloads:
 Explain your experience with Linux systems??
=============================================
2. Examples of tasks/workloads:
     userMGT
     fileMgt 
     systemMgt  

3. Running workloads in Linux servers/systems using:
  GUI  
  Commands - CLI  
  scripts  -  
  Examples of workloads/tasks executed:
    FileMGT /  = touch, vi, echo, ls, umask, chmod, find, grep, pipe, 
                 ln -s, cp, mv, rm, awk, cut, sort, sed         

    userMGT /  = adduser, usermod, userdel, chage, groupadd, passwd 

    systemMGT & Monitoring = df -h, du -h, whoami, who, w,  free -m, 

    ProcessMGT = top, ps -ef, jobs, kill, bg, fg 

    packageMGT = wget, yum, rpm, 

    securityMGT= passwd, selinux, firewall 

 
    serviceMGT = systemctl start/stop/enable/status
  

packageMGT: = wget, yum, rpm, 
    download the following packages/softwares/applications
    to make your studies simple:
   ssh-client : mobaxterm, puTTY, terminal-MacOS, gitbash
   text editors: sublime-text, bracket, vs-code, notepad++ 
   study platforms: zoom, telegram, WhatsApp Desktop, 

packageMGT: 
   text editors: vim / vi, nano, tree   
   use package managers to install packages
   yum/dnf  =  package managers redhat/centOS 
   rpm,     =  
   chocolatey = package manager for windows
   apt  = package manager for debian/ubuntu     

   yum install vim   nano tree 
                55m  25m  60m   
   sudo yum install vim nano tree

   sudo yum install vim nano tree -y  

   sudo yum remove vim nano tree -y

   wget  = is a non interactive network downloader   
   curl  = , 
  wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.71/bin/apache-tomcat-9.0.71.zip
  
  vi 
Linux file system:
=================
  opt  

ProcessMGT: = top, ps -ef, jobs, kill, bg, fg 
    FileMGT 
    userMGT 
    ProcessMGT
    securityMGT
    packageMGT
    serviceMGT 
    systemMGT 
    Monitoring 
    dbBackup 
  Tasks are processes running in your server:  
top top
19:53:17 up 14 days, 24 min, 1 user, 
 load Average: 0.00, 0.00, 0.00           0.99/1.0  
Tasks/processes:  95 total,   1 running,  94 sleeping,   0 stopped,   0 zombie
%Cpu(s):  0.0 us,  0.0 sy,  0.0 ni,100.0 id,  0.0 wa,  0.0 hi,  0.0 si,  0.0 st
MiB Mem :    761.6 total,     97.3 free,    327.8 used,    483.0 buff/cache
MiB Swap:      0.0 total,      0.0 free,      0.0 used.    433.8 avail Mem

                  System1         System2   
Load average      0.95/1=95%      0.65/1=65%    
Tasks/processes:  95 total,   11 running,  80 sleeping,   0 stopped,   
                   4 zombie 

73073 landmark  20   0   10508   4136   3436 R   0.3   0.5   0:00.36   top

[landmark@demo opt]$ ps
    PID TTY          TIME CMD
  71626 pts/0    00:00:00 bash
  73109 pts/0    00:00:00 ps
 
  top  
  ps 
  ps -ef
  ps -ef | grep sshd   

serviceMGT:
  service serviceName arguments
  service sshd status 
  service sshd start
  service sshd stop/start/status/enable/disable/restart  

  systemctl arguments serviceName
  systemctl stop/start/status/enable/disable/restart sshd 
  systemctl start/stop/status httpd  
  systemctl  


Explain your experience with Linux systems??
=============================================
1. Deploying, provisioning and creating Linux Servers in AWS Cloud.
       connect to servers using - ssh protocol  
       
2. Configuring, optimising, commissioning, decommissioning 
   and securing Linux servers

3. Running workloads in Linux servers/systems using:
  GUI  - CONSOLE  
  Commands - CLI  
  scripts  -  
  Examples of workloads/tasks executed:
    FileMGT /  = touch, vi, echo, ls, umask, chmod, mkdir 
    userMGT /  = adduser, usermod, userdel, chage 
    ProcessMGT = top, ps -ef, jobs, kill, bg, fg 
    securityMGT= passwd, selinux, firewall 
    packageMGT = wget, yum/apt, rpm,  
    serviceMGT = systemctl start/stop/enable/status
    systemMGT & Monitoring = df -h, free -m,    

4. scheduling and Automating tasks using cron tables 
   1. Backup all databases every midnight
   2. Deploy the latest version of the application every Sunday at midnight
   3. optimise our appServers every month on the 28th day  at midnight  
       yum update -y &&  yum upgrade -y    
   4. monitor system resources and send alerts using threshold every minute
       if cpu/mem usage exceed 80% send email df -h  = cpu 


Archive/Data Backup Commands:
zip :   Package and compress (archive) files  
unzip:  Extract compressed files in a ZIP archive.  
tar :   It is used to archive the directory/file

   tar -cfv  notes.txt  

tar = is used to :
  tar -cvf fileName fileName.tar.gz     = compress files  
  tar -cvf mynotes.tar.gz notes.txt  
https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.71/bin/apache-tomcat-9.0.71.tar.gz

wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.71/bin/apache-tomcat-9.0.71.tar.gz

tar -xvf apache-tomcat-9.0.71.tar.gz


  tar -xvf fileName.tar.gz   extract compressed *.tar.gz files 

9pm:
===
 --- job1  = 113/hr  = 235,000 
     job2              165,000
     job3              

kiddergarden  = $548,000  :
Linux and Linux commands  :   
============================
ACCA since 2009  = 
1000 accountants / 100 Charted accountants  
============================================
6 - 18 hours  --- computer  

simon = root access  :
  amaka   
  chioma 
  james 

Ticket0001_userCreation:
    Please create user accounts for our contractors - 
    chidi and Tita  
     useradd chidi && useradd Tita 
     sudo useradd chidi && sudo useradd Tita   
[sudo] password for amaka: admin123  
amaka is not in the sudoers file.  This incident will be reported.
 Blocker --- AUTHORISATION

Team meetings are very Important  = 18 = 3 500,000USD / year  :

High Level = You will feel good in but you will substance    
Detail

TO GOD  
==================================

You have a Blocker, how will you resolve it:
============================================
1. Check company's documentation --- running/pdf notes, video    
2. Contact Team members   
3. Use AI platforms [google, youtube, chartPGT]
4. Communities -   
6. 

3 = 40hrs * 3 = 120 hours:
  1. Terraform and aws
  2. Terraform and azure/GCP      
  Kubernetes  
  docker  
  jenkins  
  aws 

changing the server hostname:
  sudo hostname newName                    = temporal change   
  sudo hostnamectl set-hostname newName    = permanent change 
  sudo hostnamectl set-hostname dbserver         



Class videos:
  9 hours  * 20 = 180 hours 
  3 hours  * 15 =  45 hours

13 - 17 members = 80% Wed 8pm  

Team participation = 70% is great 

Contact the Class Manager Aayafor:

  Team  days  Time  agreed
  G1    Mon   7pm   15/12       = 10/13 [Paul, Amaka]
  G5    wed   7pm   16/11       = 10/13  

-- effective participation in the program 
-- family within the Landmak family
-- servanthood leadership [] 
-- prayers should be deployed to production 
-- avoid distractions, 
-- avoid short-cuts [ 15minutes ]  

NO :
             
Dallas   --- Yvonne $500,000
Toronto ---  Grace  $500,000  

work Tesla / apple 
Have you led a team before in your environment? YES 

Prayer and impartation for Managers/Leaders:
=============================================
9 hours + 9hours = 18 + 3 = 21 hours per weeek  
-- prayers / 



==============================================================================
     Running notes8 starts:
==================================
We need computerised Solutions.  
The use of computers is vital in managing tasks :
1. HARDWARE[ screen/CPU/keyboard/mouse]  and 
2. software components[Operating system,etc.]

We run different tasks on our servers to manage applications:
Workloads executed in application management:
=============================================================
  1. userMGT
  2. files/codes = FileMGT   
  3. securityMGT 
  4. systemMGT   
  5. ProcessMGT  
  6. packageMGT    
  7. DatabaseBackup & dbMGT
  8. serviceMGT  

How to execute workloads in computer systems like Linux??
=========================================================
1. GUI     -- Graphical User interface  = less than 70k  
2. CLI     -- Command Line interface    = 150k+   
3. Scripts/Files/Reusable codes   --    = 200k+

John is unable to connect to the server. Please explain what could 
be the problem.
1. Check if John is running the ssh commands correctly
    ssh userName@ipaddress vs ssh ipaddress@userName  

2. Check if the ssh-Port22 is open on the firewall/SG and 
   respond accordingly[]  
   inbound Rule: open port 22 for John  

3. Check if the server is up and running 
     ping ipaddress/hostname/dns    

4. check if the ssh service(sshd) is running and react accordingly   
     systemctl status sshd 
     sudo systemctl status sshd  


Other commands:
==============
clear : Clears the terminal screen.
cal : Displays a calendar
  cal  
  cal 2023  
  cal oct 2023 
  cal may 1980 

  Friday May 30, 1980  

wget : The non-interactive network downloader.
 wget https://dlcdn.apache.org/tomcat/tomcat-9/v9.0.75/bin/apache-tomcat-9.0.75.zip
 
 sudo yum install nginx      
    Transaction Summary
     ===================
     Install  6 Packages

    Total download size: 1.0 M
    Installed size: 3.4 M
    Is this ok [y/N]: y 

sudo yum install nginx -y   

tee:  This command is used to store and view the
     the output of any other command.
     (both at the same time) 

echo "At 360k per year I am getting rich"   
echo "With Landmark DevOps I'm a millionaire" 
echo "At 360k per year I am rich" > rich
echo "At 360k per year I am rich" | tee super

tail /etc/passwd > users.txt 
tail /etc/passwd | tee newusers.txt 

ping: The ping command sends ICMP ECHO_REQUEST to network hosts.

telnet: 
    a server/system/computer have 0-65535(65536) ports/addresses  
    ssh   = 22  
    http  = 80
    https = 443
 
 telnet 172.31.81.224 22 
 telnet 172.31.81.224 80 
 telnet 172.31.81.224 8080  

telnet ip portNumber  
telnet google.com 80 

history : Displays the recently executed commands .

uname: describes your system  
   uname -a 
   cat /etc/*releases
   cat /etc/*os*

netstat -tunlp:
  a server/system/computer have 0-65535(65536) ports/addresses 

  nginx webServer  listen on port 80  :
      sudo yum install nginx -y  
      sudo systemctl start nginx [port80 must be available]

  apache webServer listen on port 80 :
      sudo yum install httpd -y  
      sudo systemctl start httpd  [port80 must be available]

  sudo yum -y install net-tools


netstat -tulpn  :
  t = tcp 
  u = udp  
  l = listening  
  p = port 
  n = number  :

 protocols        ports/address    
   ssh              22  
   http             80  
   https            443  
   nfs              2089  
   rdp              3089 
   smtp            25/465/587   
   tomcat           8080 --- 8000  
   jenkins          8080      

watch: Using watch command we can execute the command periodically.
  watch df -f 
  watch free -m 

man : Display the on-line manual pages.
      man ls 

info:
  info ls 

help:
  ls --help

whatis: The whatis command displays a summary line from the
        man page for the specified command in Linux.

service : It will give the status of service.
  service sshd start 
  systemctl start sshd   

systemctl list-unit-files: It will list all services.

uptime: Tells how long the system has been running.
   server1 = 5 years  
   server2 = 5 months 

last: show listing of last logged in users.   

shutdown:
  sudo shutdown 
  sudo init 0  

restart/reboot:
    sudo init 6 
    sudo reboot   

